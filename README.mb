## Requisitos
 
## Node.js 22 ou superior
- confirmar versão 
    - node -v

## Sequencia para criar o projeto
- criando o arquivo package
    - npm init

## Instalar Express para gerenciar as requisições, rotas e URLs
- npm i express

## Instalar pacotes para suporte ao TypeScript
- npm i --save-dev @types/express
- npm i --save-dev @types/node

## Instalar o comilador do projeto com TypeScript e Reiniciar o projeto quando o arquivo for modificado
- npm i --save-dev ts-node

## Gerar o arquivo de configuração para o TypeScript
- npx tsc --init

## Compilar o projeto TypeScript
- npx tsc

## Inicar a aplicação com o arquivo gerado com o Node.js
- node dist/index.js

## Install the npm package: conectr o node ao mysql
- npm install typeorm --save

## You need to install reflect-metadata shim: biblioteca para adicionar metadata
- npm install reflect-metadata --save

```
```
## Criar base de dados
- CREATE DATABASE test CHARACTER SET  utf8mb4  COLLATE utf8mb_unicode_ci;
```
```

```
## Install a database driver: for MySQL or MariaDB
- npm install mysql2 --save (you can install mysql2 instead as well)
```
```

https://typeorm.io/
## Executar comandos para criar as migrations que gerencia as tabelas no banco de dados
```
exemplo:
npx typeorm migration:create src/migration/<nome-da-migration>
```
```
criar tabela users
npx typeorm migration:create src/migration/CreateUsersTable
```
```
compilar e depois executar as migrations para criar as tabelas: 
npx typeorm migration:run -d dist/data-source.js
```
```

## …or create a new repository on the command line
echo "# api-express" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M master
git remote add origin https://github.com/ferdesan/api-express.git
git push -u origin master